import spacy
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä—É—Å—Å–∫–æ–π NLP-–º–æ–¥–µ–ª–∏
try:
    nlp = spacy.load("ru_core_news_sm")
except OSError:
    raise SystemExit(
        "‚ùå –ú–æ–¥–µ–ª—å ru_core_news_sm –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë —Å –ø–æ–º–æ—â—å—é:\n"
        "python -m spacy download ru_core_news_sm"
    )

# –ë–∞–∑–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
keywords_map = {
    "–æ—Ç–¥—ã—Ö": "Rezim_RTO.md",
    "—Å–º–µ–Ω–∞": "Rezim_RTO.md",
    "–ø–∞—É–∑–∞": "Rezim_RTO.md",
    "—Ä–∞–∑—Ä—ã–≤ –ø–∞—É–∑—ã": "Rezim_RTO.md",
    "—Ç–∞—Ö–æ–≥—Ä–∞—Ñ": "4_tahograf_i_karty.md",
    "–∫–∞—Ä—Ç–∞": "4_tahograf_i_karty.md",
    "–ø–æ–µ–∑–¥": "ferry_routes.md",
    "–ø–∞—Ä–æ–º": "ferry_routes.md",
    "—Ü–º—Ä": "CMR.md",
    "–¥–æ–∫—É–º–µ–Ω—Ç": "CMR.md",
    "–∫–æ–º—Ñ–æ—Ä—Ç": "11_komfort_i_byt.md",
    "–ø–∏—Ç–∞–Ω–∏–µ": "12_pitanie_i_energiya.md"
}

# –ü–æ—Ä–æ–≥ —Å—Ö–æ–¥—Å—Ç–≤–∞ —Å–ª–æ–≤ (0.5‚Äì1.0)
SIMILARITY_THRESHOLD = 0.65


def load_relevant_knowledge(user_input: str) -> str:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ–∞–π–ª—ã –∑–Ω–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ NLP-—Å—Ä–∞–≤–Ω–µ–Ω–∏—è.
    """
    lowered = user_input.lower()
    doc = nlp(lowered)

    selected_files = set()

    for keyword, filename in keywords_map.items():
        keyword_doc = nlp(keyword)
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–∞–∂–¥—ã–º —Ç–æ–∫–µ–Ω–æ–º –≤ –∑–∞–ø—Ä–æ—Å–µ
        for token in doc:
            similarity = token.similarity(keyword_doc)
            if similarity > SIMILARITY_THRESHOLD:
                print(f"[NLP] –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: '{token.text}' ~ '{keyword}' ({similarity:.2f})")
                selected_files.add(filename)

    texts = []
    for filename in sorted(selected_files):
        path = os.path.join("knowledge", filename)
        if os.path.exists(path):
            try:
                with open(path, "r", encoding="utf-8") as f:
                    content = f.read().strip()
                    if content:
                        texts.append(f"üìò {filename}:\n{content}\n")
                    else:
                        print(f"[–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π] –§–∞–π–ª –ø—É—Å—Ç: {filename}")
            except Exception as e:
                print(f"[–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filename}: {e}")
        else:
            print(f"[–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")

    return "\n".join(texts) or ""
